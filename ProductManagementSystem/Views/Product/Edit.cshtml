@model ProductManagementSystem.Models.Product

@{
    ViewBag.Title = "Edit Product";
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h2 class="panel-title">Edit Product</h2>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ProductID)

            <div class="form-horizontal">
                <div class="form-group">
                    <label for="ProductName" class="control-label col-md-2 required-field">Product Name</label>
                    <div class="col-md-10">
                        @Html.TextBox("ProductName", Model.ProductName, new { @class = "form-control", required = "required" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="CategoryID" class="control-label col-md-2 required-field">Category</label>
                    <div class="col-md-10">
                        <select name="CategoryID" id="CategoryID" class="form-control" required>
                            @foreach (var category in ViewBag.Categories)
                            {
                                if (Model.CategoryID == category.CategoryID)
                                {
                                    <option value="@category.CategoryID" selected>@category.CategoryName</option>
                                }
                                else
                                {
                                    <option value="@category.CategoryID">@category.CategoryName</option>
                                }
                            }
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <label for="Price" class="control-label col-md-2 required-field">Price</label>
                    <div class="col-md-10">
                        @Html.TextBox("Price", Model.Price, new { @class = "form-control", type = "number", step = "0.01", min = "0.00", required = "required" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="StockQuantity" class="control-label col-md-2 required-field">Stock Quantity</label>
                    <div class="col-md-10">
                        @Html.TextBox("StockQuantity", Model.StockQuantity, new { @class = "form-control", type = "number", min = "0", required = "required" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="Description" class="control-label col-md-2">Description</label>
                    <div class="col-md-10">
                        @Html.TextArea("Description", Model.Description, new { @class = "form-control", rows = "4" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Form validation
            $('form').submit(function (e) {
                var isValid = true;
                
                // Validate product name
                if ($('#ProductName').val() === '') {
                    alert('Please enter a product name.');
                    isValid = false;
                }
                
                // Validate category
                if ($('#CategoryID').val() === '') {
                    alert('Please select a category.');
                    isValid = false;
                }
                
                // Validate price
                var price = $('#Price').val();
                if (price === '' || isNaN(price) || parseFloat(price) < 0) {
                    alert('Please enter a valid price.');
                    isValid = false;
                }
                
                // Validate stock quantity
                var stock = $('#StockQuantity').val();
                if (stock === '' || isNaN(stock) || parseInt(stock) < 0) {
                    alert('Please enter a valid stock quantity.');
                    isValid = false;
                }
                
                return isValid;
            });
        });
    </script>
} 